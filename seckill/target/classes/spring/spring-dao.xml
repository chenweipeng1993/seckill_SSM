<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合Mybatis过程-->
    <!-- 1:配置数据库相关参数properties的属性：${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>-->

    <!-- 2:数据库连接池C3P0 此时的jdbc是从C3P0中获取的，不是从spring中获取的-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <!-- 基本属性-->
        <property name="driverClass" value="${mysql_driver}"/>
        <!--特别要注意的是mysql安装在某一些机器上的时候，时区是需要设置的?serverTimezone=UTC-->
        <property name="jdbcUrl" value="${mysql_url}"/>
        <property name="user" value="${mysql_user}"/>
        <property name="password" value="${mysql_pass}"/>

        <!-- C3P0连接池的私有属性-->
        <!-- 数据库池中最大的连接对象个数-->
        <property name="maxPoolSize" value="30"/>
        <!-- 数据库连接池中最小的连接对象个数-->
        <property name="minPoolSize" value="10"/>
        <!-- 关闭时-调用close的时候自动提交事务，默认就是false-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间连接数不够的时候等待获取连接的超时时间，默认是0不超时一直等待-->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 当前获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!-- 约定大于配置-->
    <!-- 3:配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库的连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名org.seckill.entity.Seckill 别名是Seckill
        多个包用;分号分隔
        使用别名的话在mapperxml文件中才可以使用-->
        <property name="typeAliasesPackage" value="org.peng.seckill.entity"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4:配置扫描DAO接口包，目的是动态实现DAO接口，并注入到Spring容器中
    不需要给id-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory
        防止提前初始化sqlSessionFactory时jdbc的文件还没有加载，采用后处理bean的方式BeanName-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包，自动给出实现类-->
        <property name="basePackage" value="org.peng.seckill.dao"/>
    </bean>
</beans>